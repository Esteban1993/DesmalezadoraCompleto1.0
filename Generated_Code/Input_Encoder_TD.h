/* ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename    : Input_Encoder_TD.h
**     Project     : Pre1Motor1.0
**     Processor   : MK64FN1M0VLL12
**     Component   : Capture
**     Version     : Component 02.223, Driver 01.01, CPU db: 3.00.000
**     Compiler    : CodeWarrior ARM C Compiler
**     Date/Time   : 2017-11-16, 18:35, # CodeGen: 125
**     Abstract    :
**         This component "Capture" simply implements the capture function
**         of timer. The counter counts the same way as in free run mode. On
**         the selected edge of the input signal (on the input pin), the current
**         content of the counter register is written into the capture
**         register and the OnCapture event is called.
**     Settings    :
**             Timer capture encapsulation : Capture
**
**         Timer
**             Timer                   : FTM3_CNT
**             Counter shared          : No
**
**         High speed mode
**             Prescaler               : divide-by-128
**           Maximal time for capture register
**             microseconds            : ---
**             milliseconds            : ---
**             seconds                 : 2
**             seconds (real)          : 0.174803687265
**             Hz                      : ---
**             kHz                     : ---
**             MHz                     : ---
**
**         Initialization:
**              Timer                  : Enabled
**              Events                 : Enabled
**
**         Timer registers
**              Capture                : FTM3_C3V  [0x400B9028]
**              Counter                : FTM3_CNT  [0x400B9004]
**              Mode                   : FTM3_SC   [0x400B9000]
**              Run                    : FTM3_SC   [0x400B9000]
**              Prescaler              : FTM3_SC   [0x400B9000]
**
**         Used input pin              : 
**             ----------------------------------------------------
**                Number (on package)  |    Name
**             ----------------------------------------------------
**                       96            |  PTD3/SPI0_SIN/UART2_TX/FTM3_CH3/FB_AD3/I2C0_SDA
**             ----------------------------------------------------
**
**         Port name                   : PTD
**         Bit number (in port)        : 3
**         Bit mask of the port        : 0x0008
**
**         Signal edge/level           : both
**         Priority                    : 80
**
**     Contents    :
**         Reset           - byte Input_Encoder_TD_Reset(void);
**         GetCaptureValue - byte Input_Encoder_TD_GetCaptureValue(Input_Encoder_TD_TCapturedValue *Value);
**
**     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
**     All Rights Reserved.
**     
**     Redistribution and use in source and binary forms, with or without modification,
**     are permitted provided that the following conditions are met:
**     
**     o Redistributions of source code must retain the above copyright notice, this list
**       of conditions and the following disclaimer.
**     
**     o Redistributions in binary form must reproduce the above copyright notice, this
**       list of conditions and the following disclaimer in the documentation and/or
**       other materials provided with the distribution.
**     
**     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**       contributors may be used to endorse or promote products derived from this
**       software without specific prior written permission.
**     
**     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**     
**     http: www.freescale.com
**     mail: support@freescale.com
** ###################################################################*/
/*!
** @file Input_Encoder_TD.h
** @version 01.01
** @brief
**         This component "Capture" simply implements the capture function
**         of timer. The counter counts the same way as in free run mode. On
**         the selected edge of the input signal (on the input pin), the current
**         content of the counter register is written into the capture
**         register and the OnCapture event is called.
*/         
/*!
**  @addtogroup Input_Encoder_TD_module Input_Encoder_TD module documentation
**  @{
*/         

#ifndef __Input_Encoder_TD_H
#define __Input_Encoder_TD_H

/* MODULE Input_Encoder_TD. */

/* Include shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited beans */
#include "CaptureLdd4.h"

#include "Cpu.h"

#ifdef __cplusplus
extern "C" {
#endif 

#ifndef __BWUserType_Input_Encoder_TD_TCapturedValue
#define __BWUserType_Input_Encoder_TD_TCapturedValue
  typedef uint16_t Input_Encoder_TD_TCapturedValue; /* Captured value, unsigned integer value. Bit-width of the type depends on the width of selected timer. */
#endif

#define Input_Encoder_TD_PRESCALER_VALUE 0x80UL /* Initial prescaler value of the timer. It is available only if the component is enabled in high speed mode. */
#define Input_Encoder_TD_PRESCALER_VALUE_HIGH 0x80UL /* Prescaler value of the timer in high speed mode. It is available only if the component is enabled in high speed mode. */
#define Input_Encoder_TD_COUNTER_INPUT_CLOCK_HZ CaptureLdd4_CNT_INP_FREQ_U /* Initial counter input clock frequency [Hz] (integer number). It is available only if the component is enabled in high speed mode. */
#define Input_Encoder_TD_COUNTER_INPUT_CLOCK_HZ_HIGH CaptureLdd4_CNT_INP_FREQ_U_CFG_0 /* Counter input clock frequency in high speed mode [Hz] (integer number). It is available only if the component is enabled in high speed mode. */


/*
** ===================================================================
**     Method      :  Input_Encoder_TD_Reset (component Capture)
**     Description :
**         This method resets the counter register (see implementation
**         note in <General Info>).
**     Parameters  : None
**     Returns     :
**         ---             - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_SPEED - This device does not work in
**                           the active speed mode
** ===================================================================
*/
#define Input_Encoder_TD_Reset() (CaptureLdd4_Reset(CaptureLdd4_DeviceData))

/*
** ===================================================================
**     Method      :  Input_Encoder_TD_GetCaptureValue (component Capture)
**     Description :
**         This method gets the last value captured by enabled timer.
**         Note: one tick of timer is
**     Parameters  :
**         NAME            - DESCRIPTION
**       * Value           - A pointer to the content of the
**                           capture register
**     Returns     :
**         ---             - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_SPEED - This device does not work in
**                           the active speed mode
** ===================================================================
*/
#define Input_Encoder_TD_GetCaptureValue(Value) (CaptureLdd4_GetCaptureValue(CaptureLdd4_DeviceData, Value))

/*
** ===================================================================
**     Method      :  Input_Encoder_TD_OnCapture (component Capture)
**
**     Description :
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/
void CaptureLdd4_OnCapture(LDD_TUserData *UserDataPtr);

/* END Input_Encoder_TD. */

#ifdef __cplusplus
}  /* extern "C" */
#endif 

#endif 
/* ifndef __Input_Encoder_TD_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.09]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
